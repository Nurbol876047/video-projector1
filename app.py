from flask import Flask, render_template, Response, jsonify
from flask_cors import CORS
import cv2
import sys
import threading
import time

app = Flask(__name__)
CORS(app)  # –†–∞–∑—Ä–µ—à–∞–µ–º CORS –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

# –ö–∞–º–µ—Ä–∞ 1 - –õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ–±-–∫–∞–º–µ—Ä–∞
camera1 = cv2.VideoCapture(0)
camera1_name = "Web Camera"

# –ö–∞–º–µ—Ä–∞ 2 - –í–Ω–µ—à–Ω—è—è –∫–∞–º–µ—Ä–∞ (—Ç–µ–ª–µ—Ñ–æ–Ω)
camera2 = None
camera2_name = "Phone Camera"
camera2_url = "http://192.168.0.101:8080/videofeed"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ IP –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞

def init_cameras():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–º–µ—Ä"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—É—é –∫–∞–º–µ—Ä—É
    if camera1.isOpened():
        print(f"‚úì {camera1_name} –ø–æ–¥–∫–ª—é—á–µ–Ω–∞", file=sys.stderr)
    else:
        print(f"‚úó {camera1_name} –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞", file=sys.stderr)
    
    # –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å –≤—Ç–æ—Ä—É—é –∫–∞–º–µ—Ä—É
    try:
        global camera2
        camera2 = cv2.VideoCapture(camera2_url)
        if camera2.isOpened():
            print(f"‚úì {camera2_name} –ø–æ–¥–∫–ª—é—á–µ–Ω–∞", file=sys.stderr)
        else:
            print(f"‚úó {camera2_name} –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞", file=sys.stderr)
            camera2 = None
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è {camera2_name}: {e}", file=sys.stderr)
        camera2 = None

def generate_frames(camera_id):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–∞–¥—Ä—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–∞–º–µ—Ä—ã"""
    if camera_id == 1:
        camera = camera1
        camera_name = camera1_name
    elif camera_id == 2 and camera2 is not None:
        camera = camera2
        camera_name = camera2_name
    else:
        return
    
    while True:
        try:
            success, frame = camera.read()
            if not success:
                print(f"–û–®–ò–ë–ö–ê: –ù–µ –º–æ–≥—É –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–∞–¥—Ä —Å {camera_name}", file=sys.stderr)
                time.sleep(1)
                continue
            
            # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            frame = cv2.resize(frame, (640, 480))
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∫–∞–¥—Ä –≤ JPEG
            ret, buffer = cv2.imencode('.jpg', frame, [cv2.IMWRITE_JPEG_QUALITY, 80])
            if not ret:
                print(f"–û–®–ò–ë–ö–ê: –ù–µ –º–æ–≥—É –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–¥—Ä —Å {camera_name}", file=sys.stderr)
                continue
            
            frame = buffer.tobytes()
            yield (b'--frame\r\n'
                   b'Content-Type: image/jpeg\r\n\r\n' + frame + b'\r\n')
            
        except Exception as e:
            print(f"–û–®–ò–ë–ö–ê –≤ –∫–∞–º–µ—Ä–µ {camera_id}: {e}", file=sys.stderr)
            time.sleep(1)

@app.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –¥–≤—É–º—è –∫–∞–º–µ—Ä–∞–º–∏"""
    return render_template('index.html')

@app.route('/video_feed/<int:camera_id>')
def video_feed(camera_id):
    """–ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤–∏–¥–µ–æ—Å—Ç—Ä–∏–º–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞–º–µ—Ä—ã"""
    return Response(generate_frames(camera_id),
                   mimetype='multipart/x-mixed-replace; boundary=frame')

@app.route('/api/cameras')
def get_cameras():
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–º–µ—Ä–∞—Ö"""
    cameras = [
        {
            'id': 1,
            'name': camera1_name,
            'status': camera1.isOpened() if camera1 else False
        },
        {
            'id': 2,
            'name': camera2_name,
            'status': camera2.isOpened() if camera2 else False,
            'url': camera2_url
        }
    ]
    return jsonify(cameras)

@app.route('/health')
def health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
    status = f"–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! | –ö–∞–º–µ—Ä–∞ 1: {'‚úì' if camera1.isOpened() else '‚úó'}"
    if camera2:
        status += f" | –ö–∞–º–µ—Ä–∞ 2: {'‚úì' if camera2.isOpened() else '‚úó'}"
    return status

if __name__ == '__main__':
    print("=== –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê ===", file=sys.stderr)
    print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–º–µ—Ä...", file=sys.stderr)
    
    init_cameras()
    
    print("üì∫ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: http://localhost:5000", file=sys.stderr)
    print("üé• –ö–∞–º–µ—Ä–∞ 1: http://localhost:5000/video_feed/1", file=sys.stderr)
    print("üì± –ö–∞–º–µ—Ä–∞ 2: http://localhost:5000/video_feed/2", file=sys.stderr)
    print("üìä API –∫–∞–º–µ—Ä: http://localhost:5000/api/cameras", file=sys.stderr)
    print("‚ù§ –ü—Ä–æ–≤–µ—Ä–∫–∞: http://localhost:5000/health", file=sys.stderr)
    print("‚èπÔ∏è –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C", file=sys.stderr)
    
    try:
        app.run(debug=True, host='0.0.0.0', port=5000, use_reloader=False)
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}", file=sys.stderr)
